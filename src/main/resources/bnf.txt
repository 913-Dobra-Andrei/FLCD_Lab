relation = "<" | "<=" | "!=" | "==" | ">=" | ">".
operator = "+" | "-" | "*" | "/" .
simpleExpression = IDENTIFIER operator IDENTIFIER | IDENTIFIER.
expression = simpleExpression | expression operator expression.
assignment = IDENTIFIER "=" expression “;”.
condition = expression relation expression.
ioStmt = "read" "(" IDENTIFIER ")" | "write" "(" IDENTIFIER ")" ";".
simpleStmt= assignment | iosStmt | ifStmt | whileStmt.
stmt = simpleStmt{stmt}.
ifStmt = "if(" condition "){" stmt "}" ["else{" stmt "}"].
whileStmt = "while(" condition "){" stmt "}".
simpleType = "char" | "string".
arrayDecl = type"[" number "] " "IDENTIFIER ";".
declaration = simpleType" "IDENTIFIER | arrayDecl.
decllist = declaration | declaration ";" decllist.
program = "{" decllist ";" stmt "}"

1. number - rule:
 nzdigit = "1"|2"...|"9".
digit = "0"|nzdigit.
digitseq = [digit]digitseq.
sign = "+"|"-".
int = "0"|[sign]nzdigit[digitseq]..
number = int"," [digitseq].

2. string
 char = letter|digit|","|"."|"!"|"?”.
 string = ‘"’char{string}’"’.




letter = "A" | "B" |...| "Z" | "a" | "b" |…|"z".
digit = "0" | "1" |...| "9".
 identifier = letter{letter}{digit}.
